// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["jsonProtocol"]
}

datasource db {
  provider = "postgresql"
  url = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
  shadowDatabaseUrl = env("POSTGRES_URL_NON_POOLING") // used for migrations
}

model users {
  id        Int     @id @default(autoincrement())
  email     String  @unique
  display_name String @unique
  password_hash  String
  race  String
  class String
  units Json? @default("[{\"type\": \"CITIZEN\", \"level\": 1, \"quantity\": 50}, {\"type\": \"WORKER\", \"level\": 1, \"quantity\": 0}, {\"type\": \"OFFENSE\", \"level\": 1, \"quantity\": 0}, {\"type\": \"DEFENSE\", \"level\": 1, \"quantity\": 0}, {\"type\": \"SPY\", \"level\": 1, \"quantity\": 0}, {\"type\": \"SENTRY\", \"level\": 1, \"quantity\": 0}]")
  experience Int @default(0)
  gold  Int @default(1000)
  gold_in_bank  Int @default(0)
  fort_level  Int @default(1)
  fort_hitpoints  Int @default(100)
  attack_turns  Int @default(10)
  salt  String
  last_active DateTime? @db.Timestamptz(3)
  rank Int @default(0)
  items Json? @default("[{\"type\": \"WEAPON\", \"level\": 1, \"quantity\": 0}]")
  house_level Int @default(0)
  battle_upgrades Json? @default("[{\"type\": \"Offense\", \"level\": 1, \"quantity\": 0}, {\"type\": \"Spy\", \"level\": 1, \"quantity\": 0}, {\"type\": \"Sentry\", \"level\": 1, \"quantity\": 0}]")
  structure_upgrades Json? @default("[{\"type\": \"Offense\", \"level\": 1}, {\"type\": \"Spy\", \"level\": 1}, {\"type\": \"Sentry\", \"level\": 1}]")
  bio String @default("")
  colorScheme String?
  

  // Relations
  sentMessages     messages[] @relation("from_user")
  receivedMessages messages[] @relation("to_user")
  attacksMade      attack_log[] @relation("AttackLogs")
  attacksDefended  attack_log[] @relation("DefenseLogs")
}

model attack_log {
  id Int @id @default(autoincrement())
  attacker_id Int
  attackerPlayer users @relation("AttackLogs", fields: [attacker_id], references: [id])
  defender_id Int
  defenderPlayer users @relation("DefenseLogs", fields: [defender_id], references: [id])
  timestamp DateTime? @db.Timestamptz(3)
  winner Int
  stats Json
}

model bank_history {
  id Int @id @default(autoincrement())
  gold_amount Int
  from_user_id Int
  from_user_account_type String
  to_user_id Int
  to_user_account_type String
  date_time DateTime? @db.Timestamptz(3)
  history_type String
}

model messages {
  id Int @id @default(autoincrement())
  subject String
  from_user_id Int
  from_user users @relation("from_user", fields: [from_user_id], references: [id])
  to_user_id Int
  to_user users @relation("to_user", fields: [to_user_id], references: [id])
  date_time DateTime? @db.Timestamptz(3)
  created_date DateTime? @db.Timestamptz(3)
  updated_date DateTime? @db.Timestamptz(3)
  body String
  unread Boolean
}

model recruit_history {
  id Int @id @default(autoincrement())
  from_user Int
  to_user Int
  ip_addr String
  timestamp DateTime? @db.Timestamptz(3)
}